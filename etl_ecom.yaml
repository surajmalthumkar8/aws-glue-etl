AWSTemplateFormatVersion: "2010-09-09"
Description: CloudFormation stack for ETL Project

Resources:

  ### S3 Buckets ###
  RawDataBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: my-ecom-raw-data-12345

  ProcessedDataBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: my-ecom-processed-data-12345

  AthenaResultsBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: my-ecom-athena-results-12345

  ### DynamoDB Table ###
  EcomProductsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: EcomProducts
      AttributeDefinitions:
        - AttributeName: ProductID
          AttributeType: S
      KeySchema:
        - AttributeName: ProductID
          KeyType: HASH
      BillingMode: PAY_PER_REQUEST

  ### DynamoDB Table for transaction Dataset ###
  SampleProductsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: transaction_data
      AttributeDefinitions:
        - AttributeName: KEY
          AttributeType: S
      KeySchema:
        - AttributeName: KEY
          KeyType: HASH
      BillingMode: PAY_PER_REQUEST

  ### IAM Role for AWS Glue ###
  GlueETLRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: GlueS3DynamoDBRole
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: glue.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: GlueS3DynamoPolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:PutObject
                  - s3:ListBucket
                Resource:
                  - !Sub arn:aws:s3:::my-ecom-raw-data-12345
                  - !Sub arn:aws:s3:::my-ecom-raw-data-12345/*
                  - !Sub arn:aws:s3:::my-ecom-processed-data-12345
                  - !Sub arn:aws:s3:::my-ecom-processed-data-12345/*
              - Effect: Allow
                Action:
                  - dynamodb:PutItem
                  - dynamodb:UpdateItem
                  - dynamodb:BatchWriteItem
                  - dynamodb:DescribeTable
                Resource: !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/EcomProducts
              
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: "*"

              - Effect: Allow
                Action:
                  - glue:GetJob
                  - glue:GetJobRun
                  - glue:GetJobRuns
                  - glue:StartJobRun
                  - glue:CreateDatabase
                  - glue:GetDatabase
                  - glue:GetTable
                  - glue:CreateTable
                  - glue:UpdateTable
                  - glue:GetPartitions
                  - glue:BatchCreatePartition
                Resource: "*"

  ### Glue Job for ecommerce dataset ###
  EcomETLGlueJob:
    Type: AWS::Glue::Job
    Properties:
      Name: EcomETLJob
      Role: !GetAtt GlueETLRole.Arn
      Command:
        Name: glueetl
        ScriptLocation: s3://my-ecom-raw-data-12345/scripts/ecom_etl_job.py
        PythonVersion: 3
      GlueVersion: "3.0"
      MaxCapacity: 2.0
      Timeout: 10
      ExecutionProperty:
        MaxConcurrentRuns: 1
  

  ### Glue Job for transaction Dataset 
  SampleETLGlueJob:
    Type: AWS::Glue::Job
    Properties:
      Name: TransactionDataETLJob
      Role: !GetAtt GlueETLRole.Arn
      Command:
        Name: glueetl
        ScriptLocation: s3://my-ecom-raw-data-12345/scripts/transaction_etl_script.py
        PythonVersion: 3
      GlueVersion: "3.0"
      MaxCapacity: 2.0
      Timeout: 10
      ExecutionProperty:
        MaxConcurrentRuns: 1

  ### Glue Catalog
  TransactionCatalogDatabase:
    Type: AWS::Glue::Database
    Properties:
      CatalogId: !Ref "AWS::AccountId"
      DatabaseInput:
        Name: transaction_catalog

  ### Glue Crawler
  TransactionDataCrawler:
    Type: AWS::Glue::Crawler
    Properties:
      Name: transaction-data-crawler
      Role: !GetAtt GlueETLRole.Arn
      DatabaseName: transaction_catalog
      Targets:
        S3Targets:
          - Path: s3://my-ecom-processed-data-12345/transaction-data-cleaned/
      TablePrefix: ""
      SchemaChangePolicy:
        UpdateBehavior: UPDATE_IN_DATABASE
        DeleteBehavior: LOG

